@page "/admin/purchases"
@inherits OwningComponentBase<IPurchaseRepository>

<PurchaseTable TableTitle="Orders Waiting to be Shipped" Purchases="UncollectedPurchases" 
               ButtonLabel="Ship" PurchaseSelected="CollectedPurchase">

</PurchaseTable>

<PurchaseTable TableTitle="Shipped Orders" Purchases="CollectedPurchases"
               ButtonLabel="Reset" PurchaseSelected="ResetPurchase">

</PurchaseTable>

<button class="btn btn-info" @onclick="@(x => UpdateData())">Refresh Data</button>

@code {
    public IPurchaseRepository repo => Service;

    public IEnumerable<Purchase> AllPurchases { get; set; }
    public IEnumerable<Purchase> UncollectedPurchases { get; set; }
    public IEnumerable<Purchase> CollectedPurchases { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }

    public async Task UpdateData()
    {
        AllPurchases = await repo.Purchases.ToListAsync();
        UncollectedPurchases = AllPurchases.Where(x => !x.PaymentReceived);
        CollectedPurchases = AllPurchases.Where(x => x.PaymentReceived);
    }

    public void CollectedPurchase(int id) => UpdatePurchase(id, true);

    public void ResetPurchase(int id) => UpdatePurchase(id, false);

    private void UpdatePurchase(int id, bool paid)
    {
        Purchase p = repo.Purchases.FirstOrDefault(x => x.PurchaseId == id);
        p.PaymentReceived = paid;
        repo.SavePurchase(p);
    }

}
